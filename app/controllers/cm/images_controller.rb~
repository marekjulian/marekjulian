class Cm::ImagesController < ApplicationController

    before_filter :login_required
    before_filter :load_params

    layout "cm"

    def show
        @image = Cm::Image.find(params[:id])

        respond_to do |format|
            format.html { render :action => "show" }
            format.xml  { render :xml => @image, :status => :showed, :location => @image }
        end
    end

    def new

        @image = Image.new

        1.upto(1) { @image.image_variants.build }

        @image.image_variants[0].is_master = true
        @image.image_variants[0].is_web_default = false
        @image.image_variants[0].is_thumbnail = false
        @image.image_variants[0].is_thumbnail_default = false
        @image.image_variants[0].properties_mode = 'auto'

        respond_to do |format|
            format.html # new.html.erb
            format.xml  { render :xml => @image }
        end
    end

    def create

        logger.info "Inspecting image."
        logger.info params[:image].inspect
        logger.info "About to create new image."

        @image = Image.new(params[:image])

        if @image
            ok = @archive.images << @image
            if ok && @collection
                ok = @collection.images << @image
            end
            if ok
                #
                # Do two scans of the image variants:
                #   scan 1: determine attributes:
                #       - is_master: only ONE
                #       - is_web_default: only ONE
                #       - is_thumbnail
                #       - is_thumbnail_default: only ONE and is_thumbnail must be true.
                #       - can have > 1 thumbnails
                #       - for each we get 3 values: user, saved, and auto values.
                #           - the above order is their relative precedence.
                #   scan 2: set the image level properties:
                #       - master_variant_id
                #       - web_default_variant_id
                #       - thumbnail_variant_id
                #

                user = {
                    "master" => nil,
                    "web_default" => nil,
                    "thumbnail" => nil,
                    "thumbnail_default" => nil
                }
                saved = {
                    "master" => nil,
                    "web_default" => nil,
                    "thumbnail" => nil,
                    "thumbnail_default" => nil
                }
                auto = {
                    "master" => nil,
                    "web_default" => nil,
                    "thumbnail" => nil,
                    "thumbnail_default" => nil
                }

                @image.image_variants.each do |iv|
                    if iv.properties_mode == 'saved'
                    if iv.properties_mode == 'user'
                        if foo
                        end
                    elsif iv.properties_mode == 'auto'
                    end
                end
                @image.image_variants.each do |iv|
                    if iv.is_master
                        @image.master_variant_id = iv.id
                    end
                    if iv.is_web_default
                        @image.web_default_variant_id = iv.id
                    end
                    if iv.is_thumbnail_default
                        @image.thumbnail_default_variant_id = iv.id
                    end
                end
            end
            ok = @image.save
        else
            ok = false
        end

        respond_to do |format|
            if @image and ok
                flash[:notice] = 'Image was successfully created.'
                format.html {
                    if @collection
                        redirect_to edit_cm_archive_collection_path( @archive, @collection )
                    else
                        redirect_to edit_cm_archive_path( @archive )
                    end
                }
                format.xml  { render :xml => @image, :status => :created, :location => @image }
            else
                format.html { render :action => "new" }
                format.xml  { render :xml => @album.errors, :status => :unprocessable_entity }
            end
        end
    end

  def edit
    @image = Cm::Image.find(params[:id])

    respond_to do |format|
      format.html { render :action => "edit" }
      format.xml  { render :xml => @image, :status => :edited, :location => @image }
    end
  end

  def update

    logger.info "Updating image, inspecting parameters:"
    logger.info params[:id].inspect
    logger.info "About to update image."

    @image = Cm::Image.find(params[:id])

    updated = false
    new_image_variant = nil
    if params[:delete_variant_id]
      ImageVariant.find( params[:delete_variant_id], :conditions => {:image_id => params[:id]}).destroy
      @image.save
      updated = true
    elsif params[:image]
      logger.info params[:image].inspect
      updated = @image.update_attributes( params[:image] )
      if params[:update_type] == 'add_image_variant'
        new_image_variant = @image.image_variants[ @image.image_variants.size - 1 ]
      end
    end
    if request.xhr?
      logger.info "Have an xhr request."
      if updated
        render :text => 'ok'
      else
        render :text => 'notOk'
      end
    else
      respond_to do |format|
        format.html { render :action => "edit" }
        format.xml  { render :xml => @image, :status => :edited, :location => @image }
        format.js   do
          if params[:update_type] == 'add_image_variant' and updated
            responds_to_parent do
              render :update do |page|
                if params[:list_elem_id]
                  page[ params[:list_elem_id] ].remove
                end
                page.insert_html :before, :ImageVariantListElementAdd, :partial => "edit_image_variant",
                                 :locals => { :image_variant => new_image_variant, :is_thumbnail => false }
              end
            end
          end
        end
      end
    end
  end

  def destroy
    @image = Cm::Image.find(params[:id])
    @image.destroy

    respond_to do |format|
      format.html {
        if @collection
          redirect_to edit_cm_archive_collection_path( @archive, @collection )
        else
          redirect_to edit_cm_archive_path( @archive )
        end
      }
      format.xml  { head :ok }
    end
  end

  protected

    def load_params
      @archive = Archive.find( params[:archive_id] )
      @collection = nil
      if params[:collection_id]
        @collection = Collection.find( params[:collection_id] )
      end
    end

end
